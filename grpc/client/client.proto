syntax = "proto3";

option java_multiple_files = true;
option java_package = "gtunnel";
option java_outer_classname = "GTunnel";

package client;

/* The client service is the grpc interface for a gClient to manage tunnels
* and tcp connections with gServer.*/
service ClientService {
  // Gets a stream of control messages from the server
  rpc CreateEndpointControlStream(EndpointControlMessage) returns (stream EndpointControlMessage) {}
  // Gets a stream of control messages for creating and deleting tcp connections
  rpc CreateTunnelControlStream(stream TunnelControlMessage) returns (stream TunnelControlMessage) {} 
  // Gets a configuration message based on the bearer token
  rpc GetConfigurationMessage(GetConfigurationMessageRequest) returns (GetConfigurationMessageResponse) {}

  // Bidirectional stream representing a TCP connection
  rpc CreateConnectionStream(stream BytesMessage) returns (stream BytesMessage) {}
}

message BytesMessage {
  string endpoint_id = 1;
  string tunnel_id = 2;
  int32 connection_id = 3;
  bytes content = 4;
}

message GetConfigurationMessageRequest {};

message GetConfigurationMessageResponse {
  string endpoint_id = 1;
  int32 kill_date = 2;
}

message EndpointControlMessage {
  int32 operation = 1;
  string endpoint_id = 2;
  string tunnel_id = 3;
  int32 error_status = 4;
  uint32 listen_ip = 5;
  uint32 listen_port = 6;
  uint32 destination_ip = 7;
  uint32 destination_port = 8;
}

message TunnelControlMessage {
  int32 operation = 1;
  int32 error_status = 2;
  string endpoint_id = 3;
  string tunnel_id = 4;
  int32 connection_id = 5;
}
